import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import { ClerkProvider } from '@clerk/nextjs';
// Temporarily commented out to fix AbortError
// import UserSyncProvider from '@/components/UserSyncProvider';
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "ProfessionalLifeStyleShoot",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <ClerkProvider
      appearance={{
        elements: {
          modalContent: "relative",
          modalCloseButton: "block",
          card: "shadow-lg",
          headerTitle: "text-lg font-semibold",
          headerSubtitle: "text-sm text-gray-600"
        },
        layout: {
          showOptionalFields: false,
          socialButtonsPlacement: "top"
        }
      }}
    >
      <html lang="en">
        <body
          className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        >
          {/* Temporarily commented out UserSyncProvider to fix AbortError */}
          {/* <UserSyncProvider> */}
            {children}
          {/* </UserSyncProvider> */}
        </body>
      </html>
    </ClerkProvider>
  );
}
